/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/script-tag.js":
/*!************************************!*\
  !*** ./resources/js/script-tag.js ***!
  \************************************/
/***/ (() => {

eval("var token = \"TOKEN_PLACEHOLDER\";\nvar shop = \"SHOP_PLACEHOLDER\";\nvar appDomain = \"APP_DOMAIN\";\nvar styleFilePath = \"STYLE_FILE_PATH\";\npriceFormate = \"\";\ncartItems = [];\nvar link = document.createElement(\"link\");\nlink.href = styleFilePath;\nlink.type = \"text/css\";\nlink.rel = \"stylesheet\";\nlink.media = \"screen,print\";\ndocument.getElementsByTagName(\"head\")[0].appendChild(link); // all variant rows container\n\ncustomMultiVariantsContainer = document.createElement(\"div\");\ncustomMultiVariantsContainer.setAttribute(\"id\", \"custom_multi_variants_container\");\ncustomMultiVariantsContainer.classList.add(\"custom-multi-variants-container\"); // add to cart btn\n\naddToCartBtn = document.createElement(\"button\");\naddToCartBtn.disabled = true;\naddToCartBtn.setAttribute(\"id\", \"custom_multi_variant_add_to_cart\");\naddToCartBtn.innerHTML = \"Add To Cart\"; // events\n\naddToCartBtn.addEventListener(\"click\", function () {\n  addToCartHandler(this);\n});\nmultiVariantSection = \"\";\n\nif (meta && meta.page && meta.page.pageType && meta.page.pageType == 'product') {\n  // get cart items\n  var url = '/cart.js';\n  var httpReq = new XMLHttpRequest();\n\n  httpReq.onreadystatechange = function () {\n    if (this.readyState == 4 && this.status == 200) {\n      var response = httpReq.responseText;\n      response = response.split('\t').join('');\n      response = response.split('\\t').join('');\n      response = JSON.parse(response);\n      cartItems = response.items;\n      console.log(cartItems);\n    }\n  };\n\n  httpReq.open(\"GET\", url, true);\n  httpReq.setRequestHeader('Content-type', 'application/json');\n  httpReq.send(); // \n\n  var action = \"\".concat(appDomain, \"/product-variants?shop=\").concat(shop, \"&token=\").concat(token, \"&product_id=\").concat(meta.page.resourceId);\n  var xhttp = new XMLHttpRequest();\n\n  xhttp.onreadystatechange = function () {\n    if (this.readyState == 4 && this.status == 200) {\n      multiVariantsHandler(xhttp.responseText);\n    }\n  };\n\n  xhttp.open(\"GET\", action, true);\n  xhttp.send();\n} else {}\n\nfunction multiVariantsHandler(response) {\n  response = response.split('\t').join('');\n  response = response.split('\\t').join('');\n  response = JSON.parse(response);\n  var data = response.data;\n\n  if (data && data.props && data.props && data.props.is_active) {\n    if (data.props.money_with_currency_format) {\n      priceFormate = data.props.money_with_currency_format;\n    } // hide variant select part\n\n\n    var variantSwitcher = document.querySelector('variant-radios') || document.querySelector('variant-selects');\n\n    if (variantSwitcher) {\n      variantSwitcher.style.display = \"none\";\n    } // hide quantity part\n\n\n    var quantitySelect = document.querySelector('quantity-input').parentNode;\n\n    if (quantitySelect) {\n      quantitySelect.style.display = \"none\";\n    } // hide add to cart form\n\n\n    var addToCartForms = document.querySelectorAll('form[action*=\"cart/add\"]');\n\n    for (var i = 0; i < addToCartForms.length; i++) {\n      addToCartForms[i].style.display = \"none\";\n    }\n\n    if (data.product && data.product.variants) {\n      console.log('====================================');\n      console.log(data.product);\n      console.log('====================================');\n      var addToCartForm = document.querySelector('form[action*=\"cart/add\"]');\n      addToCartForm.after(customMultiVariantsContainer); // add product title instead of variant title if not variants in that product\n\n      var variantTitle = \"\";\n      var productOptions = data.product.options;\n\n      if (productOptions.length == 1 && productOptions[0].name == \"Title\") {\n        variantTitle = data.product.title;\n      } // ----------------------------------------------------------------//\n\n\n      var productVariants = data.product.variants;\n      var productImgSrc = data.product.image ? data.product.image.src : \"\";\n\n      for (var i = 0; i < productVariants.length; i++) {\n        // let variantRow = createVariantRow(productVariants[i]);\n        var variantObject = productVariants[i];\n        variantObject.cartQty = 0;\n\n        for (var index = 0; index < cartItems.length; index++) {\n          var element = cartItems[index];\n\n          if (element.product_id == data.product.id && element.variant_id == variantObject.id) {\n            variantObject.cartQty = element.quantity;\n          }\n        } // create variant row\n\n\n        var variantRow = document.createElement(\"div\");\n        variantRow.classList.add(\"custom-multi-variant-row\");\n        variantRow.setAttribute(\"data-variant-id\", variantObject.id);\n        customMultiVariantsContainer.appendChild(variantRow); // ----------------------------------------------------------------//\n        // create variant label\n\n        var variantLabel = document.createElement(\"div\");\n        variantLabel.classList.add(\"custom-multi-variant-label\");\n\n        if (variantTitle != \"\") {\n          variantLabel.innerHTML = variantTitle;\n        } else {\n          variantLabel.innerHTML = variantObject.title;\n        }\n\n        variantRow.appendChild(variantLabel); // ----------------------------------------------------------------//\n        // create variant quantity and stock avaiablility\n\n        var variantQuantity = document.createElement(\"div\");\n        variantQuantity.classList.add(\"custom-multi-variant-stock-availability\");\n        var variantAvailability = \"In stock\";\n        var quantityInput = document.createElement(\"INPUT\");\n        quantityInput.classList.add(\"custom-multi-variant-quantity\");\n        quantityInput.setAttribute(\"data-variant-id\", variantObject.id);\n        quantityInput.addEventListener('change', function () {\n          changeAddToCartStatus(this);\n        });\n        var availableQty = variantObject.inventory_quantity - variantObject.cartQty;\n\n        if (availableQty <= 0 && variantObject.inventory_policy == \"deny\") {\n          variantAvailability = \"Out of stock\";\n        } else if (variantObject.inventory_policy == \"continue\") {\n          quantityInput.setAttribute(\"type\", \"number\");\n          quantityInput.setAttribute(\"min\", \"0\");\n          quantityInput.setAttribute(\"max\", \"999999\");\n          variantRow.appendChild(quantityInput);\n        } else if (availableQty > 0) {\n          variantAvailability = \"\".concat(availableQty, \" In stock\");\n          quantityInput.setAttribute(\"type\", \"number\");\n          quantityInput.setAttribute(\"min\", \"0\");\n          quantityInput.setAttribute(\"max\", availableQty);\n          variantRow.appendChild(quantityInput);\n        }\n\n        variantQuantity.innerHTML = variantAvailability;\n        variantRow.appendChild(variantQuantity); // ----------------------------------------------------------------//\n        // create variant image\n\n        var variantimgContainer = document.createElement(\"div\");\n        variantimgContainer.classList.add(\"custom-multi-variant-img-container\");\n        var variantimg = document.createElement(\"img\");\n        variantimg.classList.add(\"custom-multi-variant-img\");\n        variantimgContainer.appendChild(variantimg);\n        var variantimgSrc = \"DEFAULT_VARIANT_IMAGE\";\n\n        if (variantObject.image_id && data.product.images.length > 0) {\n          for (var j = 0; j < data.product.images.length; j++) {\n            if (variantObject.image_id == data.product.images[j].id) {\n              variantimgSrc = data.product.images[j].src;\n              break;\n            }\n          }\n        } else if (productImgSrc != \"\") {\n          variantimgSrc = productImgSrc;\n        }\n\n        variantimg.setAttribute(\"src\", variantimgSrc);\n        variantRow.appendChild(variantimgContainer); // ----------------------------------------------------------------//\n        // create variant price\n\n        var variantPrice = document.createElement(\"div\");\n        variantPrice.classList.add(\"custom-multi-variant-price\");\n        variantPrice.setAttribute(\"data-price-variant-id\", variantObject.id);\n        variantPrice.setAttribute(\"data-current-price\", variantObject.price);\n        variantPrice.setAttribute(\"data-basic-price\", variantObject.price);\n        variantPrice.innerHTML = formatedPrice(variantObject.price, priceFormate);\n        variantRow.appendChild(variantPrice); // ----------------------------------------------------------------//\n\n        var seperatedLine = document.createElement(\"HR\");\n        variantRow.appendChild(seperatedLine);\n      }\n\n      customMultiVariantsContainer.appendChild(addToCartBtn); // events\n\n      addToCartBtn.addEventListener(\"click\", function () {\n        addToCartHandler(this);\n      });\n    }\n\n    console.log('active');\n  } else {\n    console.log('inactive');\n  }\n}\n\nvar addToCartHandler = function addToCartHandler(btn) {\n  var quantityInputs = document.querySelectorAll('.custom-multi-variant-quantity');\n  var items = [];\n\n  for (var i = 0; i < quantityInputs.length; i++) {\n    if (quantityInputs[i].value && quantityInputs[i].value > 0) {\n      items.push({\n        \"id\": quantityInputs[i].getAttribute(\"data-variant-id\"),\n        \"quantity\": quantityInputs[i].value\n      });\n    }\n  }\n\n  if (items.length > 0) {\n    var http = new XMLHttpRequest();\n    var url = '/cart/add.js';\n    data = {\n      items: items\n    };\n    http.open('POST', url, true);\n    http.setRequestHeader('Content-type', 'application/json');\n\n    http.onreadystatechange = function () {\n      //Call a function when the state changes.\n      if (http.readyState == 4 && http.status == 200) {\n        // var location =  window.location.origin+'/cart.js';\n        console.log(window.location.origin + '/cart');\n        window.location.href = window.location.origin + '/cart';\n        console.log(http.responseText);\n      } else {\n        console.log(http);\n      }\n    };\n\n    http.send(JSON.stringify(data));\n  } else {\n    alert('plz add qty of any variant');\n  }\n};\n\nvar changeAddToCartStatus = function changeAddToCartStatus(input) {\n  var totalQty = getTotalQuantity();\n  var addToCart = document.getElementById('custom_multi_variant_add_to_cart');\n  var variantId = input.getAttribute(\"data-variant-id\");\n\n  if (totalQty > 0) {\n    addToCart.disabled = false;\n  } else {\n    addToCart.disabled = true;\n  }\n\n  updateItemPrice(variantId, input.value);\n};\n\nvar getTotalQuantity = function getTotalQuantity() {\n  var elements = document.getElementsByClassName(\"custom-multi-variant-quantity\");\n  var totalQty = 0;\n\n  for (var i = 0; i < elements.length; i++) {\n    if (elements[i].value) {\n      totalQty = totalQty + elements[i].value;\n    }\n  }\n\n  return totalQty;\n};\n\nvar updateItemPrice = function updateItemPrice(variant_id) {\n  var Qty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var priceElement = document.querySelector(\"[data-price-variant-id='\".concat(variant_id, \"']\"));\n  console.log(Qty);\n\n  if (priceElement && Qty > 0) {\n    var currentPrice = priceElement.getAttribute('data-current-price');\n    var basicPrice = priceElement.getAttribute('data-basic-price');\n    var newPrice = (Math.round(basicPrice * Qty * 100) / 100).toFixed(2);\n    priceElement.setAttribute('data-current-price', newPrice);\n    priceElement.innerHTML = formatedPrice(newPrice, priceFormate); // console.log(currentPrice);\n    // console.log(basicPrice);\n  } // console.log(priceElement);\n  // console.log(variant_id);\n  // console.log(Qty);\n  // console.log(priceElement*Qty);\n\n};\n\nfunction createVariantRow(variant) {\n  console.log('====================================');\n  console.log(variant);\n  console.log('====================================');\n}\n\nfunction createMultiVariantSection() {}\n\nvar formatedPrice = function formatedPrice(price) {\n  var formate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n  if (formate) {\n    price = formate.replace('{{amount}}', price);\n  }\n\n  return price;\n};\n\nvar checkCartExistsItems = function checkCartExistsItems() {\n  var url = '/cart.js';\n  var xhttp = new XMLHttpRequest();\n\n  xhttp.onreadystatechange = function () {\n    if (this.readyState == 4 && this.status == 200) {\n      return \"ahmed\"; //    multiVariantsHandler(xhttp.responseText);\n    }\n  };\n\n  xhttp.open(\"GET\", url, true);\n  xhttp.setRequestHeader('Content-type', 'application/json');\n  xhttp.send();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/script-tag.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/script-tag.js"]();
/******/ 	
/******/ })()
;